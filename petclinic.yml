application:
  interfaces:
    configuration:
      "*": bind(haproxy#configuration.*, database-initializer#configuration.*)
      clusterSize:   
        mapping: bind(tomcat-web-farm#configuration.quantity)
        name:   "Tomcat Web Farm Size"
    app:
      url:             bind(haproxy#app.url)
      application-pic: bind(haproxy#app.petclinic-image)
  configuration:
    configuration.clusterSize: 1
    configuration.haproxy-docker-image-id: "qubell/haproxy:latest"
    configuration.database-initializer-docker-image-id: "tutum/mysql"
  components:
    haproxy:
      type: docker.Container
      interfaces:
        tomcat:
          tomcat-container-name: consume-signal(string)
        configuration:
          haproxy-docker-image-id: 
            type: configuration(string)
            name: "Docker Image ID"
        app:
          url:             
            type: publish-signal(string)
            name: "PetClinic"
          stats-url:
            type: publish-signal(string)
            name: "Haproxy stats"
          application-pic:
            type: publish-signal(map<string, object>)
            name: ""
          petclinic-image:
            type: publish-signal(map<string, object>)
            name: ""
        docker-container:
          docker-image-id:
            type: publish-signal(string)
            name: "Docker Image ID"
          docker-container-name: 
            type: publish-signal(string)
            name: "Docker Container Name"
      configuration:
        docker.image: "{$.configuration.haproxy-docker-image-id}"
        docker.signals:  
          app.url:             "http://{$.docker.ports.80.host}:{$.docker.ports.80.port}/"
          app.stats-url:       "http://{$.docker.ports.1935.host}:{$.docker.ports.1935.port}/"
          app.application-pic:
            large: "https://cloud.githubusercontent.com/assets/831307/6492522/151e504c-c269-11e4-8f1b-0c6231410a9f.png"
            small: "https://cloud.githubusercontent.com/assets/831307/6492522/151e504c-c269-11e4-8f1b-0c6231410a9f.png"
          app.petclinic-image:
            large: "https://s3.amazonaws.com/tonomi-petclinic/petclinic.png"
            small: "https://s3.amazonaws.com/tonomi-petclinic/petclinic.png"
            small-height: 70
          docker-container.docker-image-id: "{$.configuration.haproxy-docker-image-id}"
          docker-container.docker-container-name: "{$.docker.name}"
        docker.expose:
          "80": "*"
          "1935": "*"
        docker.link:
          tomcat: "{$..tomcat-container-name}"
        docker.environment:
          BACKEND_PORT: "8080"
    mysql:
      type: reference.Submodule
      interfaces:
        database:
          database-host:           publish-signal(string)
          database-port:           publish-signal(int)
          database-admin-username: publish-signal(string)
          database-admin-password: publish-signal(string)
      configuration:
        __locator.application-id: "MySQL Server on Docker"
    database-initializer:
      type: docker.Container
      interfaces:
        configuration:
          database-initializer-docker-image-id: 
            type: configuration(string)
            name: "Docker Image ID"
        server:
          database-host:           consume-signal(string)
          database-port:           consume-signal(int)
          database-admin-username: consume-signal(string)
          database-admin-password: consume-signal(string)
        mysql:
          database-host:     
            type: publish-signal(string)
            name: "Database Host"
          database-port:     
            type: publish-signal(int)
            name: "Database Port"
          database-username: 
            type: publish-signal(string)
            name: "Database User"
          database-password: 
            type: publish-signal(string)
            name: "Database Password"
          application-pic:   
            type: publish-signal(map<string,object>)
            name: ""
        docker-container:
          docker-image-id:
            type: publish-signal(string)
            name: "Docker Image ID"
          docker-container-name: 
            type: publish-signal(string)
            name: "Docker Container Name"
      required: [ server ]
      configuration:
        docker.image: "{$.configuration.database-initializer-docker-image-id}"
        docker.daemonize: false
        docker.command:
        - sh
        - -xc
        - |
           apt-get update && 
           apt-get install -y curl &&
           (curl https://dl.dropboxusercontent.com/u/133677/db.sql |
             mysql -h{$.server.*.database-host[0]} -P{$.server.*.database-port[0]} -u{$.server.*.database-admin-username[0]} -p{$.server.*.database-admin-password[0]}) &&
           (curl https://raw.githubusercontent.com/qubell-bazaar/component-petclinic/master/sql/petclinic-mysql-schema.sql |
             mysql -h{$.server.*.database-host[0]} -P{$.server.*.database-port[0]} -upetclinic -ppetclinic petclinic) &&
           (curl https://raw.githubusercontent.com/qubell-bazaar/component-petclinic/master/sql/petclinic-mysql-dataload.sql |
             mysql -h{$.server.*.database-host[0]} -P{$.server.*.database-port[0]} -upetclinic -ppetclinic petclinic)
        docker.signals:
          mysql.database-host: "{$.server.*.database-host[0]}"
          mysql.database-port: "{$.server.*.database-port[0]}"
          mysql.database-username: "petclinic"
          mysql.database-password: "petclinic"
          mysql.application-pic:
            small: "https://cloud.githubusercontent.com/assets/831307/6498103/aa648b52-c29c-11e4-8c9b-44579301c10e.png"
            large: "https://cloud.githubusercontent.com/assets/831307/6498103/aa648b52-c29c-11e4-8c9b-44579301c10e.png"
            small-height: 75
          docker-container.docker-image-id: "{$.configuration.database-initializer-docker-image-id}"
          docker-container.docker-container-name: "{$.docker.name}"
    artifact-builder:
      type: reference.Submodule
      interfaces:
        configuration:
          git-url:    configuration(string)
          git-branch: configuration(string)
        artifact:
          artifact-url: publish-signal(string)
      configuration:
        __locator.application-id: "Web application builder on Docker"
        configuration.git-url:    "https://github.com/qubell/starter-java-web.git"
        configuration.git-branch: "master"
    tomcat-web-farm:
      type: composite.Scaler
      components:
        tomcat: 
          type: docker.Container
          interfaces:
            database:
              database-host: consume-signal(string)
              database-port: consume-signal(int)
            artifact:
              artifact-url: consume-signal(string)
            tomcat:
              tomcat-container-name:
                type: publish-signal(string)
                name: Container name
              application-pic:
                type: publish-signal(map<string, object>)
                name: ""
            docker-container:
              docker-image-id:
                type: publish-signal(string)
                name: "Docker Image ID"
              docker-container-name: 
                type: publish-signal(string)
                name: "Docker Container Name"
          required: [ database, artifact ]
          configuration:
            docker.image: "qubell/tomcat:latest"
            docker.expose:
              "8080": "*"
            docker.signals:
              tomcat.tomcat-container-name: "{$.docker.name}"
              tomcat.application-pic:
                large: "https://cloud.githubusercontent.com/assets/831307/6492521/151d4c24-c269-11e4-970c-b2e9b468021f.png"
                small: "https://cloud.githubusercontent.com/assets/831307/6492521/151d4c24-c269-11e4-970c-b2e9b468021f.png"
              docker-container.docker-image-id: "qubell/tomcat:latest"
              docker-container.docker-container-name: "{$.docker.name}"
            docker.environment:
              MYSQL_HOST: "{$.database.*.database-host[0]}"
              MYSQL_PORT: "{$.database.*.database-port[0]} "
              MYSQL_USERNAME: "petclinic"
              MYSQL_PASSWORD: "petclinic"
              WAR_URL: "{$.artifact.*.artifact-url[0]}"
  bindings:
    - [ haproxy#tomcat, tomcat-web-farm.tomcat ]
    - [ database-initializer#server, mysql ]
    - [ tomcat-web-farm.tomcat#database, database-initializer ]
    - [ tomcat-web-farm.tomcat#artifact, artifact-builder ]

